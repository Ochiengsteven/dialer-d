version: "3.8"

services:
  postgres:
    image: postgres:14-alpine
    container_name: drunk-dial-postgres
    environment:
      POSTGRES_DB: drunkdial
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: drunk-dial-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: drunk-dial-server
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - rabbitmq
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: drunkdial
      DB_USER: postgres
      DB_PASSWORD: postgres
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      JWT_SECRET: your-jwt-secret-key # Should be changed in production
      CLIENT_URL: http://localhost:80 # Client URL for CORS
    volumes:
      - ./server:/app
      - /app/node_modules
    restart: unless-stopped

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: drunk-dial-nginx
    ports:
      - "80:80"
    depends_on:
      - server
    restart: unless-stopped

volumes:
  postgres_data:
  rabbitmq_data:
